<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4FBSBz7q7AAAAABJRU5ErkJggg==
</value>
  </data>
</root>